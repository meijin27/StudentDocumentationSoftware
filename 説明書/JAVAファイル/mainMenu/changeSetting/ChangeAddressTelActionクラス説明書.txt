ChangeNameDateofBirthAction クラスに関する説明書

1. 概要
このクラスは、ユーザーの名前と生年月日を変更するアクションを定義しています。このアクションは、特定のフォームデータを受け取り、バリデーションを実施した後、ユーザーデータベースを更新します。

2. 主要な処理ステップ:
① セッションの確認: ユーザーのIDとマスターキーがセッションに存在するか確認します。
② 入力値の取得: 名前（姓・名）と生年月日をリクエストから取得します。
③ バリデーション: 取得した入力値のバリデーションを実施します。
④ データの暗号化: マスターキーを使用して入力データを暗号化します。
⑤ データベースの更新: ユーザーの名前と生年月日を更新します。
⑥ 操作ログの追加: 名前と生年月日の変更をデータベースの操作ログに追加します。

3. 詳細:
① セッションの確認: セッションのidとmaster_keyが存在しない場合、エラーメッセージをセットし、ログインページにリダイレクトします。
② 入力値の取得: リクエストから名前（lastName, firstName）、ふりがな（lastNameRuby, firstNameRuby）、生年月日（birthYear, birthMonth, birthDay）の値を取得します。
③ どれかの項目が未入力の場合、エラーメッセージをセットします。
	・ふりがながひらがなでない場合、エラーメッセージをセットします。
	・生年月日が実在しない日付の場合、エラーメッセージをセットします。
	・名前やふりがなが32文字を超える場合、エラーメッセージをセットします。
	・いずれかのエラーメッセージがセットされた場合、元のページに戻ります。
④ データの暗号化: Decryptクラスを使用してセッションからマスターキー、IV、ユーザーIDを取得します。取得したマスターキーとIVを使用して、名前と生年月日を暗号化します。その後、共通の暗号キーを使用して再度暗号化します。
⑤ データベースの更新: UserDAOを使用して、データベースにユーザーの新しい名前と生年月日を更新します。
⑥ 操作ログの追加: ユーザーの名前と生年月日の変更をデータベースの操作ログに追加します。

4. 例外処理:
もしデータベースへのアクセスや暗号化処理中に例外が発生した場合、エラーメッセージをログに記録し、エラーメッセージをリクエストにセットして、元のページに戻ります。

5. 終了処理:
すべての処理が正常に終了した場合、成功メッセージをセットして、成功画面に遷移します。