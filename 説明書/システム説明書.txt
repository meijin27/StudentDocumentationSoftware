【開発環境】
・Tomcat9
・Java17
・mysql  Ver 15.1 Distrib 10.4.28-MariaDB, for Win64 (AMD64)
・Apache/2.4.56 (Win64)

【環境変数】
環境変数の仕様
1.MY_ENCRYPTION_KEY
説明: 暗号化および復号に使用するAESのキー。
フォーマット: UTF-8の文字列
必須: はい。設定されていない場合、アプリケーションは例外をスローします。
2. MY_IV
説明: AESの初期ベクトル (IV) として使用する値。
フォーマット: Base64エンコードされた文字列
必須: はい。設定されていない場合、アプリケーションは例外をスローします。
3.DATABASE_USER
説明: データベースのユーザーID
必須: 設定されていない場合、データベースが使用できず、エラーが発生します。
4.DATABASE_PASS
説明: データベースのパスワード
必須: 設定されていない場合、データベースが使用できず、エラーが発生します。


【システム概要】
・このシステムの目的は学生生活上、提出する必要がある書類の入力を半自動で行いPDF出力することである。
・登録したユーザー情報（名前・学生番号等）を書類に自動記入する。
・登録していない情報は都度入力する。（例：学割発行時の行先等）
・登録する情報は下記22項目。
	1.アカウント名
	2.パスワード
	3.姓
	4.名
	5.姓（ふりがな）
	6.名（ふりがな）
	7.秘密の質問
	8.秘密の質問の答え
	9.電話番号
	10.郵便番号
	11.住所
	12.生年月日
	13.入学年月日
	14.学生種別
	15.クラス名
	16.学年
	17.組
	18.学籍番号
	19.公共職業安定所名
	20.支給番号
	21.出席番号
	22.雇用保険有無
・学生種別によって発行可能な書類は異なる。
・ログイン後のメインメニューで表示されている運営からのお知らせはnotice.txtに記載している。

【セキュリティ】
・暗号化と復号には"AES/CBC/PKCS5Padding"を使用している。
・暗号化は環境変数を利用した共通暗号とアカウント毎に作成するマスターキー等を用いる個別暗号の２種類がある。
・パスワード及び秘密の質問の答えはBCryptにてハッシュ化している。
・ユーザーごとにマスターキーとIVを作成し、登録したデータを個別暗号化する。
・マスターキーはパスワードとアカウント名をキーにして暗号化する。すなわち、ログイン時以外はマスターキーを復号できない。
・システムは環境変数を使用する。環境変数をキーとし、共通暗号として暗号化・復号に使用する。データベースに登録するデータはＩＤ及びＩＶ及び日時以外は共通暗号化する。すなわち、データベースに登録しているデータの暗号化は２重に行われる。アカウント名のみ共通暗号化のみが行われ、２重の暗号化は行われない。
・ログインを連続10回失敗すると5分間アカウントロックする。
・ユーザーはログインに成功するとIDとマスターキーを取得し、マスターキーは復号する。IDは共通暗号化してセッションに格納する。マスターキーはアカウントとＩＤをキーとして暗号化し、さらに共通暗号化してセッションに格納する。
・セッションは有効期限を60分とする。
・セッションIDはログイン成功後に再生成する。
・クッキーにはhttponly属性及びsecure属性及びsamesite属性（Strict)をつける。
・トークンを実装しCSRF対策を行う。
・書類作成時はセッションに格納しているＩＤとマスターキーを取り出して復号する。その後、データベースから抽出したデータを共通暗号で復号してからマスターキーを使用して復号する。
・秘密の質問はアカウントとIDをキーとして暗号化する。
・パスワード忘却時用に使用するセカンドマスターキーは秘密の質問と答えをキーとして暗号化する。
・パスワードを忘れた場合、かつ、アカウント名・秘密の質問の答え・生年月日が合致した場合、セカンドマスターキーを復号して新パスワードとアカウント名で暗号化し、マスターキーとする。
・ヘッダーには下記を設定する。
	1.Content-Security-Policy (CSP)：コンテンツのセキュリティポリシーを指定するヘッダー。
		(1).default-src 'self': デフォルトで、コンテンツは同一オリジンからのみロードされるべきであると指定。
		(2).img-src 'self' data:: 画像は同一オリジンまたはデータURIからのみロードされるべきであると指定。
		(3).script-src 'self' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net: スクリプトは指定された3つのオリジンからのみロードできる。
		(4).style-src 'self' https://cdn.jsdelivr.net: スタイルシートは2つのオリジンからのみロードできる。
		(5).frame-ancestors 'self': ページは同一オリジンのフレームからのみ埋め込むことができる。
		(6).form-action 'self': フォームの送信は同一オリジンにのみ行うことができる。
	2.X-Frame-Options：このヘッダーはページがどのようなオリジンからフレーム内に埋め込むことができるかを指定する。SAMEORIGINとし、ページが同じオリジンからのみフレーム内に埋め込み可能とする。
	3.Access-Control-Allow-Origin：CORS (Cross-Origin Resource Sharing) ヘッダーで、https://studentdocusoft.ddns.net のオリジンからのアクセスのみを許可。
	4.X-Content-Type-Options：ブラウザにMIMEタイプを推測しないように指示。nosniffとし、ブラウザに対して提供されるMIMEタイプをそのまま使用するよう指示。
	5.Strict-Transport-Security (HSTS)：ブラウザにウェブサイトへのアクセスを常にHTTPSを使用して行う指示。このポリシーは1年間適用し、サブドメインにも適用する。
	6.Permissions-Policy：カメラ、マイク、および位置情報を使用することを禁止

【データベース】
・データベース名は”student_documentation_software”
・テーブルは３個用意している。
	1.users：ユーザーの登録した個人情報を格納するテーブル
	2.operation_logs：ユーザーの行った操作記録
	3.login_logs:ユーザーのログイン記録
・テーブルの詳細構造は別添のstudent_documentation_software.sqlを参照のこと。

【ログ】
・ログイン失敗時にはデータベースのlogin_logsにユーザーＩＤ・ＩＰアドレス・日時・ログイン失敗理由を記録する。
・ログイン成功時にはデータベースのlogin_logsにユーザーＩＤ・ＩＰアドレス・日時を記録する。
・ユーザーによる何かしらの操作が行われて操作が成功した場合にはoperation_logsにユーザーＩＤ・操作内容・日時を記録する。
・システム側のエラーが発生した場合には、userHomeに"StudentDocumentationSoftwareLog"フォルダを作成し、エラー発生日時と内容を記録する。

【アカウント作成】
・アカウント作成は他の登録済みアカウントと異なる場合に可能。
・削除されたアカウント名も使用できない。

【パスワード忘却時】
・パスワードを忘れた場合は秘密の質問の答えと生年月日を入力することで再設定ができる。なお、初期設定が完了していない場合は再設定不可。

【アカウントの削除】
・アカウントの削除はアカウントを使用不能にはするが、データベースからは削除しない。すなわち、データベースにて削除フラグを立てるのみで、データ自体は保存している。